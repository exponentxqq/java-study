Classfile /develop/person/java-study/src/main/java/com/exp/jvm/bytecode/Test.class
  Last modified Jun 23, 2021; size 522 bytes
  MD5 checksum 42ef67b7a1d234c4f18fb80f191c8d0e
  Compiled from "Test.java"
public class com.exp.jvm.bytecode.Test
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // com/exp/jvm/bytecode/Test
  super_class: #3                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #3.#21         // java/lang/Object."<init>":()V
   #2 = Class              #22            // com/exp/jvm/bytecode/Test
   #3 = Class              #23            // java/lang/Object
   #4 = Utf8               <init>
   #5 = Utf8               ()V
   #6 = Utf8               Code
   #7 = Utf8               LineNumberTable
   #8 = Utf8               LocalVariableTable
   #9 = Utf8               this
  #10 = Utf8               Lcom/exp/jvm/bytecode/Test;
  #11 = Utf8               test
  #12 = Utf8               num
  #13 = Utf8               I
  #14 = Utf8               nums
  #15 = Utf8               [I
  #16 = Utf8               bufsz
  #17 = Utf8               StackMapTable
  #18 = Class              #15            // "[I"
  #19 = Utf8               SourceFile
  #20 = Utf8               Test.java
  #21 = NameAndType        #4:#5          // "<init>":()V
  #22 = Utf8               com/exp/jvm/bytecode/Test
  #23 = Utf8               java/lang/Object
{
  public com.exp.jvm.bytecode.Test();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/exp/jvm/bytecode/Test;

  ////////////////////////////////////////////////////////
  //  0: iconst_2           数组长度压入栈顶
  //  1: newarray   int     从栈顶取出数组长度，并创建int类型数组将数组引用值压入栈顶
  //  3: dup                复制一个栈顶值(这里是数组引用值)压入栈顶
  //  4: iconst_0           数组索引0压入栈顶
  //  5: bipush     11      往栈顶压入int值11，此时的栈(11, 0, #a, #a)
  //  7: iastore            将int值11存入数组的索引0的位置，该操作消耗三个栈值，此时栈(#a)
  //  8: dup                复制一个栈顶值(这里是数组引用值)压入栈顶
  //  9: iconst_1           数组索引1压入栈顶
  // 10: bipush     122     往栈顶压入int值122，此时的栈(122, 1, #a, #a)
  // 12: iastore            将int值122存入数组的索引1的位置，该操作消耗三个栈值，此时栈(#a)
  // 13: astore_1           从栈顶取出数组引用值放到变量1(nums)，此时栈空
  // 14: bipush     12      将int值12压入栈顶
  // 16: istore_2           从栈顶获取int值放到变量2(bufsz)
  // 17: aload_1            将变量1(nums)的值压入栈顶
  // 18: astore_3
  // 19: aload_3
  // 20: arraylength
  // 21: istore     4
  // 23: iconst_0
  // 24: istore     5
  // 26: iload      5
  // 28: iload      4
  // 30: if_icmpge  50      判断栈顶的两个int值，满足条件往下执行，不满足则直接跳转到50位的指令
  // 33: aload_3
  // 34: iload      5
  // 36: iaload
  // 37: istore     6
  // 39: iload_2
  // 40: iload      6
  // 42: iadd
  // 43: istore_2
  // 44: iinc       5, 1
  // 47: goto       26      跳转到26位的指令
  // 50: return
  ////////////////////////////////////////////////////////
  public void test();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=1
         0: iconst_2
         1: newarray       int
         3: dup
         4: iconst_0
         5: bipush        11
         7: iastore
         8: dup
         9: iconst_1
        10: bipush        122
        12: iastore
        13: astore_1
        14: bipush        12
        16: istore_2
        17: aload_1
        18: astore_3
        19: aload_3
        20: arraylength
        21: istore        4
        23: iconst_0
        24: istore        5
        26: iload         5
        28: iload         4
        30: if_icmpge     50
        33: aload_3
        34: iload         5
        36: iaload
        37: istore        6
        39: iload_2
        40: iload         6
        42: iadd
        43: istore_2
        44: iinc          5, 1
        47: goto          26
        50: return
      LineNumberTable:
        line 5: 0
        line 6: 14
        line 7: 17
        line 8: 39
        line 7: 44
        line 10: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39       5     6   num   I
            0      51     0  this   Lcom/exp/jvm/bytecode/Test;
           14      37     1  nums   [I
           17      34     2 bufsz   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class com/exp/jvm/bytecode/Test, class "[I", int, class "[I", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 23
}
SourceFile: "Test.java"
